{
    // 控制是否在搜索中跟踪符号链接。
    "search.followSymlinks": false,
    // 以逗号分隔的标记列表，其中的标记之前将有额外新行。若为 null，默认包含 "head, body, /html"。
    "html.format.extraLiners": "",
    // 控制编辑器是否显示控制字符。
    "editor.renderControlCharacters": true,
    // 控制字体系列。
    "editor.fontFamily": "consolas",
    // 以像素为单位控制字体大小。
    "editor.fontSize": 16,
    // 在一定数量的等宽字符后显示垂直标尺。输入多个值，显示多个标尺。若数组为空，则不绘制标尺。
    "editor.rulers": [
        120
    ],
    // 控制折行的方式。on: 将在视区宽度处换行。
    "editor.wordWrap": "on",
    // 控制编辑器在空白字符上显示符号的方式。selection: 仅在选定文本上呈现空白字符。
    "editor.renderWhitespace": "selection",
    // 根据制表位插入和删除空格。
    "editor.useTabStops": true,
    // 控制是否在打开文件时，基于文件内容自动检测 #editor.tabSize# 和 #editor.insertSpaces#
    "editor.detectIndentation": false,
    // 一个制表符等于的空格数。在 #editor.detectIndentation# 启用时，根据文件内容，该设置可能会被覆盖。
    "editor.tabSize": 4,
    // 按 Tab 键时插入空格。该设置在 #editor.detectIndentation# 启用时根据文件内容可能会被覆盖。
    "editor.insertSpaces": true,
    // 启用 Tab 补全。on: 在按下 Tab 键时进行 Tab 补全，将插入最佳匹配建议。
    "editor.tabCompletion": "on",
    // 控制计算折叠范围的策略。auto 将使用语言特定的折叠策略 (若可用)。indentation 将使用基于缩进的折叠策略。
    "editor.foldingStrategy": "indentation",
    // 控制编辑器在键入一行后是否自动格式化该行。
    "editor.formatOnType": true,
    // 在保存时格式化文件。格式化程序必须可用，延迟后文件不能保存，并且编辑器不能关闭。
    "editor.formatOnSave": true,
    // 控制边栏的位置。它可显示在工作台的左侧或右侧。
    "workbench.sideBar.location": "left",
    // 指定在工作台中使用的图标主题，或指定 "null" 以不显示任何文件图标。
    "workbench.iconTheme": "vscode-icons",
    // 如果设置成'true'，关于新的版本消息将不再显示
    "vsicons.dontShowNewVersionMessage": true,
    // 调整窗口的缩放级别。原始大小是 0，每次递增(例如 1)或递减(例如 -1)表示放大或缩小 20%。也可以输入小数以便以更精细的粒度调整缩放级别。
    "window.zoomLevel": 0.58,
    // 自定义要启动的终端类型。external: 使用设定的外部终端 / integrated: 使用 VS Code 的集成终端。
    "terminal.explorerKind": "external",
    // 自定义要在 Windows 上运行的终端。
    "terminal.external.windowsExec": "C:\\Program Files\\Git\\bin",
    // 配置排除的文件和文件夹的 glob 模式。例如，文件资源管理器将根据此设置决定要显示或隐藏的文件和文件夹。
    "files.exclude": {
        // 匹配文件路径所依据的 glob 模式。设置为 true 或 false 可启用或禁用该模式。
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/bin": true,
        "**/obj": true,
        "**/.vscode": true,
        "**/.vs": true,
        // 屏蔽 Node.js Npm 包引用目录
        "node_modules": true,
        // 屏蔽 TypeScript 自动生成的 js 文件
        "**/*.js": {
            "when": "$(basename).ts"
        },
        "**/*.js.map": true,
        // 屏蔽 Live Sass Compile 生成文件
        "**/*.min.css": true,
        "**/*.min.css.map": true
    },
    // 在读取和写入文件时使用的默认字符集编码。可以按语言对此项进行配置。utf8: UTF-8
    "files.encoding": "utf8",
    // 启用后，保存文件时在文件末尾插入一个最终新行。
    "files.insertFinalNewline": true,
    // 启用后，将在保存文件时删除文件每行末尾的空格。
    "files.trimTrailingWhitespace": true,
    // 启用后，保存文件时将删除在最终新行后的所有新行。
    "files.trimFinalNewlines": true,
    // 自定义控件相关设置
    "diffEditor.renderSideBySide": false,
    // markdown 插件的展示主题
    "markdown-preview-enhanced.previewTheme": "atom-dark.css",
    // 自动粘贴生成图片的路径设置
    "pasteImage.path": "_pasteImage/${currentFileNameWithoutExt}_image",
    // 关闭单词检查
    "cSpell.enabled": false,
    // 关闭Json的架构下载
    "json.schemaDownload.enable": false,
    "compile-hero.typescript-output-directory": "./tsoutdir",
    "compile-hero.generate-minified-html": true,
    "compile-hero.generate-minified-javascript": true,
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    "debug.onTaskErrors": "abort",
    "extensions.ignoreRecommendations": false,
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter.notebook.ipynb"
    },
    "leetcode.endpoint": "leetcode-cn",
    "leetcode.hint.configWebviewMarkdown": false,
    "leetcode.workspaceFolder": "d:\\_Test_\\LeetCodeLearn",
    "leetcode.hint.commentDescription": true,
    "leetcode.defaultLanguage": "csharp",
    //------------------------------LaTeX 配置----------------------------------
    // 设置是否自动编译
    "latex-workshop.latex.autoBuild.run": "never",
    //右键菜单
    "latex-workshop.showContextMenu": true,
    //从使用的包中自动补全命令和环境
    "latex-workshop.intellisense.package.enabled": true,
    //编译出错时设置是否弹出气泡设置
    "latex-workshop.message.error.show": false,
    "latex-workshop.message.warning.show": false,
    // 编译工具和命令
    "latex-workshop.latex.tools": [
        {
            "name": "xelatex",
            "command": "xelatex",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "%DOCFILE%"
            ]
        },
        {
            "name": "pdflatex",
            "command": "pdflatex",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "%DOCFILE%"
            ]
        },
        {
            "name": "latexmk",
            "command": "latexmk",
            "args": [
                "-synctex=1",
                "-interaction=nonstopmode",
                "-file-line-error",
                "-pdf",
                "-outdir=%OUTDIR%",
                "%DOCFILE%"
            ]
        },
        {
            "name": "bibtex",
            "command": "bibtex",
            "args": [
                "%DOCFILE%"
            ]
        }
    ],
    // 用于配置编译链
    "latex-workshop.latex.recipes": [
        {
            "name": "PDFLaTeX",
            "tools": [
                "pdflatex"
            ]
        },
        {
            "name": "Biber",
            "tools": [
                "biber"
            ]
        },
        {
            "name": "XeLaTeX",
            "tools": [
                "xelatex"
            ]
        },
        {
            "name": "BibTeX",
            "tools": [
                "bibtex"
            ]
        },
        {
            "name": "LaTeXmk",
            "tools": [
                "latexmk"
            ]
        },
        {
            "name": "xelatex -> bibtex -> xelatex*2",
            "tools": [
                "xelatex",
                "bibtex",
                "xelatex",
                "xelatex"
            ]
        },
        {
            "name": "pdflatex -> bibtex -> pdflatex*2",
            "tools": [
                "pdflatex",
                "bibtex",
                "pdflatex",
                "pdflatex"
            ]
        },
        {
            "name": "xelatex -> biber -> xelatex*2",
            "tools": [
                "xelatex",
                "biber",
                "xelatex",
                "xelatex"
            ]
        }
    ],
    //文件清理。此属性必须是字符串数组
    "latex-workshop.latex.clean.fileTypes": [
        "*.aux",
        "*.bbl",
        "*.blg",
        "*.idx",
        "*.ind",
        "*.lof",
        "*.lot",
        "*.out",
        "*.toc",
        "*.acn",
        "*.acr",
        "*.alg",
        "*.glg",
        "*.glo",
        "*.gls",
        "*.ist",
        "*.fls",
        "*.log",
        "*.fdb_latexmk",
        "*.synctex.gz"
    ],
    //设置为onFaild 在构建失败后清除辅助文件
    "latex-workshop.latex.autoClean.run": "onFailed",
    // 使用上次的recipe编译组合
    "latex-workshop.latex.recipe.default": "lastUsed",
    // 用于反向同步的内部查看器的键绑定。ctrl/cmd +点击(默认)或双击
    "latex-workshop.view.pdf.internal.synctex.keybinding": "double-click",
    //------------------------------ Live Sass Compile 配置 ----------------------------------
    "liveSassCompile.settings.formats": [
        {
            "format": "compact",
            "extensionName": ".min.css",
            "savePath": "~"
        }
    ],
    "liveSassCompile.settings.excludeList": [
        "**/node_modules/**",
        ".vscode/**"
    ],
    // 启用 GitHub Flavored Markdown 表格格式化。
    "markdown.extension.tableFormatter.enabled": false,
    // 是否强制将目录中的链接转为小写。
    "markdown.extension.toc.downcaseLink": false,
    // 主题选择
    "workbench.colorTheme": "Visual Studio Dark",
    // 主题配置颜色
    "editor.tokenColorCustomizations": {
        "[Visual Studio Dark]": {
            "functions": "#dcdcaa",
            "textMateRules": [
                {
                    "scope": "entity.name.type",
                    "settings": {
                        "foreground": "#36bea4"
                    }
                },
                {
                    "scope": "entity.name.type.interface,entity.name.type.enum",
                    "settings": {
                        "foreground": "#B8D7A3"
                    }
                },
                {
                    "scope": "variable.other.enummember",
                    "settings": {
                        "foreground": "#fff"
                    }
                }
            ],
        },
    },
    // 配置默认格式化插件: prettier
    "[html]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    // prettier 插件自定义配置
    "prettier.bracketSameLine": true,
    "prettier.printWidth": 120,
    "prettier.singleAttributePerLine": true,
    "prettier.tabWidth": 4,
}
