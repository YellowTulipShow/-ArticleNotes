{
    // 控制编辑器是否显示控制字符。
    "editor.renderControlCharacters": true,
    // 控制字体系列。
    "editor.fontFamily": "consolas",
    // 以像素为单位控制字体大小。
    "editor.fontSize": 16,
    // 在一定数量的等宽字符后显示垂直标尺。输入多个值，显示多个标尺。若数组为空，则不绘制标尺。
    "editor.rulers": [120],
    // 控制折行的方式。on: 将在视区宽度处换行。
    "editor.wordWrap": "on",
    // 控制编辑器在空白字符上显示符号的方式。selection: 仅在选定文本上呈现空白字符。
    "editor.renderWhitespace": "selection",
    // 根据制表位插入和删除空格。
    "editor.useTabStops": true,
    // 控制是否在打开文件时，基于文件内容自动检测 #editor.tabSize# 和 #editor.insertSpaces#
    "editor.detectIndentation": false,
    // 一个制表符等于的空格数。在 #editor.detectIndentation# 启用时，根据文件内容，该设置可能会被覆盖。
    "editor.tabSize": 4,
    // 按 Tab 键时插入空格。该设置在 #editor.detectIndentation# 启用时根据文件内容可能会被覆盖。
    "editor.insertSpaces": true,
    // 启用 Tab 补全。on: 在按下 Tab 键时进行 Tab 补全，将插入最佳匹配建议。
    "editor.tabCompletion": "on",
    // 控制边栏的位置。它可显示在工作台的左侧或右侧。
    "workbench.sideBar.location": "left",
    // 指定在工作台中使用的图标主题，或指定 "null" 以不显示任何文件图标。
    "workbench.iconTheme": "vscode-icons",
    // 如果设置成'true'，关于新的版本消息将不再显示
    "vsicons.dontShowNewVersionMessage": true,
    // 调整窗口的缩放级别。原始大小是 0，每次递增(例如 1)或递减(例如 -1)表示放大或缩小 20%。也可以输入小数以便以更精细的粒度调整缩放级别。
    "window.zoomLevel": 0.58,
    // 自定义要启动的终端类型。external: 使用设定的外部终端 / integrated: 使用 VS Code 的集成终端。
    "terminal.explorerKind": "external",
    // 自定义要在 Windows 上运行的终端。
    "terminal.external.windowsExec": "C:\\Program Files\\Git\\bin",
    // 配置排除的文件和文件夹的 glob 模式。例如，文件资源管理器将根据此设置决定要显示或隐藏的文件和文件夹。
    "files.exclude": {
        // 匹配文件路径所依据的 glob 模式。设置为 true 或 false 可启用或禁用该模式。
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "**/bin": true,
        "**/obj": true,
        "**/.vscode": true,
    },
}
